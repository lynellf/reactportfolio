{
  "_args": [
    [
      {
        "raw": "react-progress-button@git+https://github.com/aleksei0807/react-progress-button.git",
        "scope": null,
        "escapedName": "react-progress-button",
        "name": "react-progress-button",
        "rawSpec": "git+https://github.com/aleksei0807/react-progress-button.git",
        "spec": "git+https://github.com/aleksei0807/react-progress-button.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:aleksei0807/react-progress-button.git",
          "sshUrl": "git+ssh://git@github.com/aleksei0807/react-progress-button.git",
          "httpsUrl": "git+https://github.com/aleksei0807/react-progress-button.git",
          "gitUrl": "git://github.com/aleksei0807/react-progress-button.git",
          "shortcut": "github:aleksei0807/react-progress-button",
          "directUrl": "https://raw.githubusercontent.com/aleksei0807/react-progress-button/master/package.json"
        }
      },
      "D:\\Documents\\GitHub\\reactportfolio\\node_modules\\react-images-uploader"
    ]
  ],
  "_from": "git+https://github.com/aleksei0807/react-progress-button.git",
  "_id": "react-progress-button@5.0.1",
  "_inCache": true,
  "_location": "/react-progress-button",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-progress-button@git+https://github.com/aleksei0807/react-progress-button.git",
    "scope": null,
    "escapedName": "react-progress-button",
    "name": "react-progress-button",
    "rawSpec": "git+https://github.com/aleksei0807/react-progress-button.git",
    "spec": "git+https://github.com/aleksei0807/react-progress-button.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:aleksei0807/react-progress-button.git",
      "sshUrl": "git+ssh://git@github.com/aleksei0807/react-progress-button.git",
      "httpsUrl": "git+https://github.com/aleksei0807/react-progress-button.git",
      "gitUrl": "git://github.com/aleksei0807/react-progress-button.git",
      "shortcut": "github:aleksei0807/react-progress-button",
      "directUrl": "https://raw.githubusercontent.com/aleksei0807/react-progress-button/master/package.json"
    }
  },
  "_requiredBy": [
    "/react-images-uploader"
  ],
  "_resolved": "git+https://github.com/aleksei0807/react-progress-button.git#753b745600a343d26d0e697593824060bfb7f7f4",
  "_shasum": "b543a19a2938f262c2c900d713fbb11a30a35fd0",
  "_shrinkwrap": null,
  "_spec": "react-progress-button@git+https://github.com/aleksei0807/react-progress-button.git",
  "_where": "D:\\Documents\\GitHub\\reactportfolio\\node_modules\\react-images-uploader",
  "author": {
    "name": "Mathieu Dutour"
  },
  "bugs": {
    "url": "https://github.com/mathieudutour/react-progress-button/issues"
  },
  "dependencies": {},
  "description": "Simple react.js component for a inline progress indicator",
  "devDependencies": {
    "babel": "^6.5.1",
    "babel-cli": "^6.8.0",
    "babel-core": "^6.7.6",
    "babel-eslint": "^6.1.2",
    "babel-polyfill": "^6.5.0",
    "babel-preset-es2015": "^6.5.0",
    "babel-preset-react": "^6.5.0",
    "babel-preset-stage-0": "^6.5.0",
    "babel-register": "^6.5.1",
    "chai": "^3.5.0",
    "chai-as-promised": "^5.2.0",
    "eslint": "^3.2.2",
    "eslint-config-standard": "^5.1.0",
    "eslint-plugin-promise": "^2.0.0",
    "eslint-plugin-standard": "^2.0.0",
    "mocha": "^3.0.0",
    "react": "^15.1.0",
    "react-dom": "^15.1.0",
    "sinon": "^1.17.3",
    "webpack": "^1.12.15"
  },
  "files": [
    "lib",
    "src",
    "react-progress-button.css"
  ],
  "gitHead": "753b745600a343d26d0e697593824060bfb7f7f4",
  "homepage": "https://github.com/mathieudutour/react-progress-button",
  "jsnext:main": "src/index.js",
  "keywords": [
    "react",
    "progress",
    "button",
    "component",
    "javascript",
    "react-component"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "name": "react-progress-button",
  "optionalDependencies": {},
  "readme": "# react-progress-button\r\n\r\n[![build status](https://img.shields.io/travis/mathieudutour/react-progress-button/master.svg?style=flat-square)](https://travis-ci.org/mathieudutour/react-progress-button)\r\n[![npm version](https://img.shields.io/npm/v/react-progress-button.svg?style=flat-square)](https://www.npmjs.com/package/react-progress-button)\r\n[![Dependency Status](https://david-dm.org/mathieudutour/react-progress-button.svg)](https://david-dm.org/mathieudutour/react-progress-button)\r\n[![devDependency Status](https://david-dm.org/mathieudutour/react-progress-button/dev-status.svg)](https://david-dm.org/mathieudutour/react-progress-button#info=devDependencies)\r\n\r\n> Simple [React](http://facebook.github.io/react/index.html) component for a circular Progress Button.\r\n\r\n### [Demo](https://mathieudutour.github.io/react-progress-button)\r\n\r\n[![Demo](https://cdn.rawgit.com/mathieudutour/react-progress-button/master/example/demo.gif \"Demo\")](https://github.com/mathieudutour/react-progress-button/blob/master/example/index.html)\r\n\r\n## Install\r\n\r\n```bash\r\nnpm install react-progress-button --save\r\n```\r\n\r\n## Example\r\n\r\n### Controlled usage:\r\n\r\n```javascript\r\nimport ProgressButton from 'react-progress-button'\r\n\r\nconst App = React.createClass({\r\n  getInitialState () {\r\n    return {\r\n      buttonState: ''\r\n    }\r\n  },\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <ProgressButton onClick={this.handleClick} state={this.state.buttonState}>\r\n          Go!\r\n        </ProgressButton>\r\n      </div>\r\n    )\r\n  },\r\n\r\n  handleClick () {\r\n    this.setState({buttonState: 'loading'})\r\n    // make asynchronous call\r\n    setTimeout(function() {\r\n      this.setState({buttonState: 'success'})\r\n    }.bind(this), 3000)\r\n  }\r\n})\r\n```\r\n\r\n[Source](https://github.com/mathieudutour/react-progress-button/blob/master/example/index.html)\r\n\r\n### Using Promises:\r\n\r\nIf the function passed in via the `onClick` prop return a Promise or if a promise\r\nis passed as an argument of the `loading` method,\r\nthe component will automatically transition to its success or error\r\nstates based on the outcome of the Promise without the need for\r\nexternal manipulation of state using a ref.\r\n\r\n```javascript\r\nimport ProgressButton from 'react-progress-button'\r\n\r\nconst App = React.createClass({\r\n  render () {\r\n    return (\r\n      <div>\r\n        <ProgressButton onClick={this.handleClick}>\r\n          Go!\r\n        </ProgressButton>\r\n      </div>\r\n    )\r\n  },\r\n\r\n  handleClick() {\r\n    return new Promise(function(resolve, reject) {\r\n      setTimeout(resolve, 3000)\r\n    })\r\n  }\r\n});\r\n```\r\n\r\n[Source](https://github.com/mathieudutour/react-progress-button/blob/master/example/index-promises.html)\r\n\r\n## API\r\n\r\n### Props\r\n\r\nAll props are optional. All props other than that will be passed to the top element.\r\n\r\n##### classNamespace\r\n\r\nNamespace for CSS classes, default is `pb-` i.e CSS classes are `pb-button`.\r\n\r\n##### durationError\r\n\r\nDuration (ms) before going back to normal state when an error occurs,\r\ndefault is 1200\r\n\r\n##### durationSuccess\r\n\r\nDuration (ms) before going back to normal state when an success occurs,\r\ndefault is 500\r\n\r\n##### onClick\r\n\r\nFunction to call when the button is clicked; if it returns a Promise\r\nthen the component will transition to the success/error state based on\r\nthe outcome of the Promise\r\n\r\n##### onError\r\n\r\nFunction to call when going back to the normal state after an error\r\n\r\n##### onSuccess\r\n\r\nFunction to call when going back to the normal state after a success\r\n\r\n##### state\r\n\r\nState of the button if you do not want to use the functions. Can be `''`, `loading`, `success`, `error` or `disabled`.\r\n\r\n##### type\r\n\r\nType of the button (can be 'submit' for example).\r\n\r\n##### form\r\n\r\nId of the form to submit (useful if the button is not directly inside the form).\r\n\r\n##### shouldAllowClickOnLoading\r\n\r\nWhether click event should bubble when in loading state\r\n\r\n### Methods\r\n\r\n##### loading()\r\n\r\nPut the button in the loading state.\r\n\r\n##### disable()\r\n\r\nPut the button in the disabled state.\r\n\r\n##### notLoading(), enable()\r\n\r\nPut the button in the normal state.\r\n\r\n##### success([callback, dontGoBackToNormal])\r\n\r\nPut the button in the success state. Call the callback or the onSuccess prop when going back to the normal state.\r\n\r\n##### error([callback])\r\n\r\nPut the button in the error state. Call the callback or the onSuccess prop when going back to the normal state.\r\n\r\n## Styles\r\n\r\nLook at [react-progress-button.css](https://github.com/mathieudutour/react-progress-button/blob/master/react-progress-button.css) for an idea on how to style this component.\r\n\r\n## License\r\n\r\n  MIT\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mathieudutour/react-progress-button.git"
  },
  "scripts": {
    "prepublish": "make clean build",
    "test": "make test"
  },
  "version": "5.0.1"
}
